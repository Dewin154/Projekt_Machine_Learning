setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
print(dirname(rstudioapi::getActiveDocumentContext()$path))
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
install.packages("rstudioapi")
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(rstudioapi)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
dirname(rstudioapi::getActiveDocumentContext()$path)
dirname(rstudioapi::getActiveDocumentContext()$path)
print(dirname(rstudioapi::getActiveDocumentContext()$path))
setwd("C:/Users/peter/Desktop/THD/4_Semester/Machine_Learning")
setwd("C:/Users/peter/THD/4_Semester/Machine_Learning")
print(dirname(rstudioapi::getActiveDocumentContext()$path))
data <- read.csv("data.csv", header=TRUE, sep=",", fill=TRUE, stringsAsFactors = TRUE)
View(data)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
summary(data)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
setwd("M:/R_Projects/Projekt_Machine_Learning")
summary(data)
View(data)
anzahl_treffer <- sum(grepl("unfallfrei", data$offer_description))
remove(anzahl_treffer)
anzahl_unfallfrei <- sum(grepl("unfallfrei", data$offer_description))
anzahl_unfallfrei <- sum(grepl("unfallfrei", data$offer_description))
data <- read.csv("data.csv", header=TRUE, sep=",", fill=TRUE, stringsAsFactors = TRUE)
View(data)
View(data)
#convert variables to numeric or factor
data$year <- as.numeric(gsub(",", ".", as.character(data$year)))
View(data)
anzahl_problemzeilen <- sum(apply(df, 1, function(row) {
any(is.na(row) | row == 0 | row == "")
}))
anzahl_problemzeilen <- sum(apply(data, 1, function(row) {
any(is.na(row) | row == 0 | row == "")
}))
data <- read.csv("data.csv", header=TRUE, sep=",", fill=TRUE, stringsAsFactors = TRUE)
anzahl_problemzeilen <- sum(apply(data, 1, function(row) {
any(is.na(row) | row == 0 | row == "")
}))
ungültige_year_zeilen <- data[!grepl("^\\d{4}$", as.character(data$year)), ]
View(ungültige_year_zeilen)
remove(ungültige_year_zeilen)
remove(anzahl_problemzeilen)
remove(anzahl_unfallfrei)
data$year <- as.numeric(gsub(",", ".", as.character(data$year)))
data$year <- as.numeric(gsub(",", ".", as.character(data$price_in_euro)))
data <- read.csv("data.csv", header=TRUE, sep=",", fill=TRUE, stringsAsFactors = TRUE)
summary(data)
data$year <- as.numeric(gsub(",", ".", as.character(data$year)))
data$price_in_euro <- as.numeric(gsub(",", ".", as.character(data$price_in_euro)))
data$power_kw <- as.numeric(gsub(",", ".", as.character(data$power_kw)))
data$power_ps <- as.numeric(gsub(",", ".", as.character(data$power_ps)))
data$mileage_in_km <- as.numeric(gsub(",", ".", as.character(data$mileage_in_km)))
summary(data)
count <- sum(apply(data, 1, function(row) {
any(is.na(row) | row == "" | row == "- (g/km)" | row == "0 g/km")
}))
remove(count)
library(rstudioapi)
print(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
anzahl_problemzeilen <- sum(apply(data, 1, function(row) {
any(is.na(row) | row == 0 | row == "")
}))
print(paste("Anzahl der Zeilen mit NA, 0 oder leerem Feld:", anzahl_problemzeilen))
